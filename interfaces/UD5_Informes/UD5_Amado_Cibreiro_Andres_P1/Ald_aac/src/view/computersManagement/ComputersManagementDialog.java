/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.computersManagement;

import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aca
 */
public class ComputersManagementDialog extends javax.swing.JDialog {

    /**
     * Creates new form ComputersManagmentDialog
     */
    public ComputersManagementDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initMyComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        computersManagementLabel = new javax.swing.JLabel();
        computersManagementTabbedPane = new javax.swing.JTabbedPane();
        computersPanel = new javax.swing.JPanel();
        removeButton = new javax.swing.JButton();
        computersScrollPane = new javax.swing.JScrollPane();
        computersTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        serialNumberLabel = new javax.swing.JLabel();
        serialNumberTextField = new javax.swing.JTextField();
        brandTextField = new javax.swing.JTextField();
        brandLabel = new javax.swing.JLabel();
        modelTextField = new javax.swing.JTextField();
        modelLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        typeLabel = new javax.swing.JLabel();
        atributeTextField = new javax.swing.JTextField();
        atributeLabel = new javax.swing.JLabel();
        brLabel = new javax.swing.JLabel();
        servicesPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        computersManagementLabel.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        computersManagementLabel.setText("Computers Management");

        removeButton.setText("Remove");
        removeButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        removeButton.setPreferredSize(new java.awt.Dimension(70, 21));

        computersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Brand", "Model", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        computersScrollPane.setViewportView(computersTable);

        editButton.setText("Edit");

        addButton.setText("Add");

        saveButton.setText("Save");
        saveButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 51), 1, true));
        saveButton.setPreferredSize(new java.awt.Dimension(70, 21));

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");

        serialNumberLabel.setText("Serial Number:");

        brandLabel.setText("Brand:");

        modelLabel.setText("Model:");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desktop computer", "Laptop", "All-in-one" }));

        typeLabel.setText("Type:");

        atributeLabel.setText("Atribute:");

        brLabel.setText("_________________________________");

        javax.swing.GroupLayout computersPanelLayout = new javax.swing.GroupLayout(computersPanel);
        computersPanel.setLayout(computersPanelLayout);
        computersPanelLayout.setHorizontalGroup(
            computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(computersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computersScrollPane)
                .addContainerGap())
            .addGroup(computersPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, computersPanelLayout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(modelLabel)
                    .addComponent(brandLabel)
                    .addComponent(serialNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(modelTextField)
                    .addComponent(brandTextField)
                    .addComponent(serialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(computersPanelLayout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(computersPanelLayout.createSequentialGroup()
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(typeLabel)
                            .addComponent(atributeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(atributeTextField)
                            .addComponent(typeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(81, 81, 81)))
                .addGap(85, 85, 85))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, computersPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(brLabel)
                .addGap(263, 263, 263))
        );
        computersPanelLayout.setVerticalGroup(
            computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, computersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton)
                    .addComponent(addButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(brLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(computersPanelLayout.createSequentialGroup()
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(atributeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(atributeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton)
                            .addComponent(cancelButton)))
                    .addGroup(computersPanelLayout.createSequentialGroup()
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNumberLabel)
                            .addComponent(serialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brandLabel)
                            .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(computersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelLabel)
                            .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16))
        );

        computersManagementTabbedPane.addTab("Computers", computersPanel);

        javax.swing.GroupLayout servicesPanelLayout = new javax.swing.GroupLayout(servicesPanel);
        servicesPanel.setLayout(servicesPanelLayout);
        servicesPanelLayout.setHorizontalGroup(
            servicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 773, Short.MAX_VALUE)
        );
        servicesPanelLayout.setVerticalGroup(
            servicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 485, Short.MAX_VALUE)
        );

        computersManagementTabbedPane.addTab("Services", servicesPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(computersManagementLabel)
                .addGap(240, 240, 240))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computersManagementTabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computersManagementLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(computersManagementTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initMyComponents() {
        this.typeComboBox.setSelectedIndex(0);
        this.atributeLabel.setVisible(false);
        this.atributeTextField.setVisible(false);
    }

    private int lastSelectedRow;

    public void clearSelectionMouseEvent(MouseEvent e) {
        int selectedRow = computersTable.rowAtPoint(e.getPoint());
        if (selectedRow == -1) {
            computersTable.clearSelection();
        }
    }

    public void addRowTable(Vector row) {
        DefaultTableModel model = (DefaultTableModel) this.computersTable.getModel();
        model.addRow(row);
    }

    public String getComputerInfo(int row, int column) {
        String info = "";
        if(row >= 0 && column >= 0) {
          info = computersTable.getModel().getValueAt(row, column).toString();
      }

        return info;
    } 

    public void clearTable() {
        DefaultTableModel model = (DefaultTableModel) computersTable.getModel();
        model.setRowCount(0);
        computersTable.clearSelection();
        computersTable.revalidate();
        computersTable.repaint();
    }


    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    public void addComputersTableMouseListener(MouseListener al) {
        this.computersTable.addMouseListener(al);
    }

    public void addComputersScrollPaneMouseListener(MouseListener al) {
        this.computersScrollPane.addMouseListener(al);
    }

    public void addRemoveButtonActionListener(ActionListener al) {
        this.removeButton.addActionListener(al);
    }

    public void addEditButtonActionListener(ActionListener al) {
        this.editButton.addActionListener(al);
    }

    public void addAddButtonActionListener(ActionListener al) {
        this.addButton.addActionListener(al);
    }

    public void addSaveButtonActionListener(ActionListener al) {
        this.saveButton.addActionListener(al);
    }

    public void addClearButtonActionListener(ActionListener al) {
        this.clearButton.addActionListener(al);
    }

    public void addCancelButtonActionListener(ActionListener al) {
        this.cancelButton.addActionListener(al);
    }

    public void addTypeComboBox(ActionListener al) {
        this.typeComboBox.addActionListener(al);
    }

    public void updateTypeLabel() {
        int option = this.typeComboBox.getSelectedIndex();
        this.atributeTextField.setVisible(true);
        this.atributeLabel.setVisible(true);

        if (option == 0) {
            this.atributeLabel.setText("Power supply:");
        } else if (option == 1) {
            this.atributeLabel.setText("Keyboard layout:");
        } else if (option == 2) {
            this.atributeLabel.setText("Screen resolution:");
        }
    }

    public void clearForm() {
        this.serialNumberTextField.setText("");
        this.brandTextField.setText("");
        this.modelTextField.setText("");
        this.typeComboBox.setSelectedIndex(0);
        this.atributeTextField.setText("");
    }

    public void showForm() {
        this.serialNumberLabel.setVisible(true);
        this.serialNumberTextField.setVisible(true);
        this.brandLabel.setVisible(true);
        this.brandTextField.setVisible(true);
        this.modelLabel.setVisible(true);
        this.modelTextField.setVisible(true);
        this.typeComboBox.setVisible(true);
        this.typeLabel.setVisible(true);
        this.brLabel.setVisible(true);
        this.saveButton.setVisible(true);
        this.clearButton.setVisible(true);
        this.cancelButton.setVisible(true);
    }

    public void hideForm() {
        this.serialNumberLabel.setVisible(false);
        this.serialNumberTextField.setVisible(false);
        this.brandLabel.setVisible(false);
        this.brandTextField.setVisible(false);
        this.modelLabel.setVisible(false);
        this.modelTextField.setVisible(false);
        this.typeComboBox.setVisible(false);
        this.typeLabel.setVisible(false);
        this.brLabel.setVisible(false);
        this.saveButton.setVisible(false);
        this.clearButton.setVisible(false);
        this.cancelButton.setVisible(false);
        this.atributeLabel.setVisible(false);
        this.atributeTextField.setVisible(false);
    }
    
    public void disableForm() {
        this.serialNumberLabel.setEnabled(false);
        this.serialNumberTextField.setEnabled(false);
        this.brandLabel.setEnabled(false);
        this.brandTextField.setEnabled(false);
        this.modelLabel.setEnabled(false);
        this.modelTextField.setEnabled(false);
        this.typeComboBox.setEnabled(false);
        this.typeLabel.setEnabled(false);
        this.brLabel.setEnabled(false);
        this.saveButton.setEnabled(false);
        this.clearButton.setEnabled(false);
        this.cancelButton.setEnabled(false);
        this.atributeLabel.setEnabled(false);
        this.atributeTextField.setEnabled(false);
    }
    
    public void enableForm() {
        this.serialNumberLabel.setEnabled(true);
        this.serialNumberTextField.setEnabled(true);
        this.brandLabel.setEnabled(true);
        this.brandTextField.setEnabled(true);
        this.modelLabel.setEnabled(true);
        this.modelTextField.setEnabled(true);
        this.typeComboBox.setEnabled(true);
        this.typeLabel.setEnabled(true);
        this.brLabel.setEnabled(true);
        this.saveButton.setEnabled(true);
        this.clearButton.setEnabled(true);
        this.cancelButton.setEnabled(true);
        this.atributeLabel.setEnabled(true);
        this.atributeTextField.setEnabled(true);
    }

    public void setDisable(String element, boolean disable) {
        switch (element) {
            case "remove":
                if (disable) {
                    this.removeButton.setEnabled(false);
                } else {
                    this.removeButton.setEnabled(true);
                }
                break;

            case "edit":
                if (disable) {
                    this.editButton.setEnabled(false);
                } else {
                    this.editButton.setEnabled(true);
                }
                break;

            case "add":
                if (disable) {
                    this.addButton.setEnabled(false);
                } else {
                    this.addButton.setEnabled(true);
                }
                break;
                
            case "table":
                if (disable) {
                    this.computersTable.setEnabled(false);
                } else {
                    this.computersTable.setEnabled(true);
                }
                break;
            
            case "scrollPane":
                if (disable) {
                    this.computersScrollPane.setEnabled(false);
                } else {
                    this.computersScrollPane.setEnabled(true);
                }
                break;
            default:
                System.out.println("Error desactivando un botón");
                break;
        }
    }

    public String getSerialNumber() {
        return this.serialNumberTextField.getText();
    }

    public void setSerialNumber(String text) {
        this.serialNumberTextField.setText(text);
    }

    public String getBrand() {
        return this.brandTextField.getText();
    }

    public void setBrand(String text) {
        this.brandTextField.setText(text);
    }

    public String getModel() {
        return this.modelTextField.getText();
    }

    public void setModel(String text) {
        this.modelTextField.setText(text);
    }

    public String getComputerTypeOption() {
        return this.typeComboBox.getSelectedItem().toString();
    }
    
    public void setComputerTypeOption(int option) {
        this.typeComboBox.setSelectedIndex(option);
    }

    public String getAtribute() {
        return this.atributeTextField.getText();
    }

    public void setAtribute(String text) {
        this.atributeTextField.setText(text);
    }

    public boolean isAnyTextFieldBlank() {
        String[] textFields = {getSerialNumber(), getBrand(),
            getModel(), getAtribute()
        };

        for (String tf : textFields) {
            if (tf.isBlank()) {
                return true;
            }
        }

        return false;
    }

    private int selectedRow;

    public int getSelectedRow() {
        return this.selectedRow = computersTable.getSelectedRow();
    }

    public boolean isRowSelected(boolean b) {
        if (computersTable.getSelectedRow() == -1) {
            return false;
        }

        return true;
    }

    public void setSelectedRow(int row) {
        this.selectedRow = row;
    }
    
    public boolean isComputerScrollPaneEnable() {
        return this.computersScrollPane.isEnabled();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel atributeLabel;
    private javax.swing.JTextField atributeTextField;
    private javax.swing.JLabel brLabel;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JTextField brandTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel computersManagementLabel;
    private javax.swing.JTabbedPane computersManagementTabbedPane;
    private javax.swing.JPanel computersPanel;
    private javax.swing.JScrollPane computersScrollPane;
    private javax.swing.JTable computersTable;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel serialNumberLabel;
    private javax.swing.JTextField serialNumberTextField;
    private javax.swing.JPanel servicesPanel;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
